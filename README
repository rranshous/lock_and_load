goal is to create a tool / set of scripts
which facilitate taking a file (video), encrypting
it, hosting it and publishing it so that it can
only be read by a set of users with a shared key (keys?)

targeting rpi hardware

capture video - perhaps out of scope
encrypt video - only want those i trust to watch
host video - ipfs
publish video - on chain (xdai?)
manage keys - at least a folder format, prob script to create


--
PGP keyring - each device has public/private key. for max security the
broadcasting device would need to encrypt the video seperately for each
recipient (using the recipients public key). This would mean we'd end
up with P files to publish and host. With video the amt of data could
become and issue (locally) though the current in-mind use case would
only have a single video being published at any time (per device)

Set up keyrings for each device and ship the paired devices
with complete trust in each other's pgp certs

a keypair for the group
a keypair for each device who's cert is signed by group
(basically a ring where each device has on of the non
 master keys?)
could than destroy the group keypair to ensure the group
 never grows


--

# start out creating the keys for the group of devices
# creates a key package for each device
bin/mkrings - create group and device keys; package

# on the device load the shared package
bin/import_keys <dir_of_key_package> - load package of keys

# on the device encrypt a file for the other devices
# in it's group
bin/encrypt_for_others <file_path> - encrypt for each sibling device

[utility]
bin/fingerprints_of_others - prints the gpg fingerprints
 of the sibling devices

[VERY DANGER]
bin/remove_all_keys - remove all private and public keys
